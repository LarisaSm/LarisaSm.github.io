{"version":3,"sources":["components/ImagePopup.js","components/Spinner.js","components/Confirm.js","utils/api.js","images/header__logo.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["ImagePopup","card","isOpen","onClose","src","nameImg","closeByOverlay","useCallback","evt","target","currentTarget","handleEscClose","key","React","useEffect","Popup","document","querySelector","classList","add","body","addEventListener","remove","removeEventListener","className","alt","type","onClick","Spinner","Confirm","setIsOpen","confirmAction","isLoadingConfirm","setIsLoadingConfirm","cardDelete","preventDefault","api","config","this","_url","url","_headers","headers","fetch","then","res","_returnData","name","link","method","JSON","stringify","about","id","avatar","ok","json","Promise","reject","status","authorization","Header","logo","Footer","CurrentUserContext","createContext","Card","cardId","like","onCardClick","onCardLike","onCardDelete","ownerId","setConfirmOpen","currentUser","useContext","isOwn","_id","cardDeleteButtonClassName","isLiked","some","i","cardLikeButtonClassName","length","Main","cards","onEditProfile","onAddPlace","onEditAvatar","isLoading","setConfirmAction","setConfirmObj","href","map","PopupWithForm","formId","title","children","button","onSubmit","isLoadingPopup","noValidate","EditProfilePopup","onUpdateUser","useState","inputAboutValue","setInputAboutValue","inputNameValue","setInputNameValue","e","handleSubmit","autoComplete","placeholder","minLength","maxLength","value","onChange","required","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","inputCardName","setInputCardName","inputCardLink","setInputCardLink","App","isEditProfilePopupOpen","setEditProfilePopupState","isEditAvatarPopupOpen","setEditAvatarPopupState","isAddPlacePopupOpen","setAddPlacerPopupState","isImagePopupOpen","setImagePopupState","isConfirmOpen","setCards","setIsLoading","selectedCard","setSelectedCard","setIsLoadingPopup","setСurrentUser","currentCard","setСurrentCard","closeAllPopups","getUserInfo","catch","err","console","log","getInitialCards","item","likes","owner","Provider","handleEditAvatarClick","deleteLikeCard","newCard","newCards","c","likeCard","obj","editUserInfo","EditAvatarPopup","setUserAvatar","addNewCard","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1cd8a84c.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\n\nfunction ImagePopup ({card, isOpen, onClose}) {\n  \n  const src = card.src;\n  const nameImg = card.nameImg;\n\n  const closeByOverlay = useCallback((evt) => {\n    if (evt.target !== evt.currentTarget) return;\n    onClose();\n  }, [onClose])\n\n  const handleEscClose = useCallback((evt) => {\n    if (evt.key === \"Escape\") {\n      onClose();\n    }\n  }, [onClose])\n\n\n  React.useEffect(() => {\n    if(isOpen) {\n      const Popup = document.querySelector('.image');\n      Popup.classList.add(\"popup_opened\");\n      document.body.addEventListener(\"keyup\", handleEscClose);\n      Popup.addEventListener(\"click\", closeByOverlay);\n    }\n    return () => {\n      const Popup = document.querySelector('.image');\n      Popup.classList.remove(\"popup_opened\");\n      document.body.removeEventListener(\"keyup\", handleEscClose);\n      Popup.removeEventListener(\"click\", closeByOverlay);\n    };\n  }, [isOpen, closeByOverlay, handleEscClose]); \n\nreturn (\n  <div className=\"popup image\">\n    <div className=\"popup__container image__container\">\n      <img\n        src={src}\n        alt={nameImg}\n        className=\"popup__image\"\n      />\n      <p className=\"popup__figcaption-image\">{nameImg}</p>\n      <button className=\"popup__close\" type=\"button\" onClick={onClose}></button>\n      \n    </div>\n  </div>\n)\n\n}\n\nexport default ImagePopup","import React from 'react';\nimport './Spinner.css';\n\nfunction Spinner() {\n  return (\n    <div className=\"Spinner\"></div>\n  );\n}\n\nexport default Spinner;\n","import React from \"react\";\nimport Spinner from \"./Spinner\";\n\nfunction Confirm({\n  isOpen,\n  setIsOpen,\n  confirmAction,\n  isLoadingConfirm,\n  setIsLoadingConfirm,\n  cardDelete,\n}) {\n  function onClick() {\n    // console.log(\"confirm -> onClick\");\n    // console.log(confirmAction);\n    setIsLoadingConfirm(true);\n    switch (confirmAction) {\n      case \"cardDelete\":\n        cardDelete();\n        break;\n      default:\n        break;\n    }\n    // console.log(\"Confirm -> onCLick\");\n  }\n\n  return (\n    <div className={`confirm popup ${isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container confirm__container\">\n        <h2 className=\"popup__header\">Вы уверены?</h2>\n\n        <button className=\"popup__save\" type=\"button\" onClick={onClick}>\n          Да\n        </button>\n        {isLoadingConfirm ? <Spinner /> : \"\"}\n        <button\n          className=\"popup__close\"\n          type=\"button\"\n          onClick={function (evt) {\n            evt.preventDefault();\n            setIsOpen(false);\n          }}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default Confirm;\n","class Api {\n  constructor (config) {\n      this._url = config.url;\n      this._headers = config.headers;\n  }\n\n  getInitialCards() {\n    return fetch(this._url + 'cards', {\n      headers: this._headers,\n  })\n      .then(res => this._returnData(res));\n  } \n\n  addNewCard (name, link) {\n    return fetch(this._url + 'cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link \n      })\n    })\n    .then((res) => this._returnData(res));\n}\n\n  editUserInfo (name, about) {\n    return fetch(this._url + 'users/me', {\n    method: 'PATCH',\n    headers: this._headers,\n    body: JSON.stringify({\n      name: name,\n      about: about \n    })\n  })\n  .then((res) => this._returnData(res));\n}\n  \n  getUserInfo () {\n    return fetch(this._url + 'users/me', {\n        headers: this._headers\n      })\n      .then((res) => this._returnData(res));\n    }\n\n\n  deleteCard(id) {\n      return fetch(this._url + `cards/${id}`, {\n          method: \"DELETE\",\n          headers: this._headers,\n      }).then((res) => this._returnData(res))\n  }\n\n\n  likeCard(id) {\n    return fetch(this._url + `cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this._headers,\n  }).then((res) => this._returnData(res))\n  }\n\n  deleteLikeCard(id) {\n    return fetch(this._url + `cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n  }).then((res) => this._returnData(res))\n  }\n\n  getLikesCard(id) {\n    return fetch(this._url + `cards/likes/${id}`, {\n      method: \"GET\",\n      headers: this._headers,\n  }).then((res) => this._returnData(res))\n  }\n\n  setUserAvatar(avatar) {\n    return fetch(this._url + 'users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar \n      })\n    })\n    .then((res) => this._returnData(res));\n  }\n\n_returnData (res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-20/\",\n  headers: {\n\t\tauthorization: '4b126959-9593-4c1c-9c1d-30d3e8eeddbf',\n    \"content-type\": \"application/json\",\n  }\n}); \n\nexport default api;","export default __webpack_public_path__ + \"static/media/header__logo.a307e1c4.svg\";","import React from 'react';\nimport logo from '../images/header__logo.svg';\n\nfunction Header () {\n  return (\n    <header className=\"header page__header\">\n      <img src={logo} alt=\"Место\" className=\"header__logo\" />\n    </header>\n  )\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer page__footer\">&copy; 2020 Mesto Russia</footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\n\nexport const CurrentUserContext = React.createContext();\n\nexport default CurrentUserContext","import React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Card({\n  cardId,\n  src,\n  nameImg,\n  like,\n  onCardClick,\n  onCardLike,\n  onCardDelete,\n  ownerId,\n  setConfirmOpen,\n}) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = ownerId === currentUser._id;\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = `element__trash ${\n    isOwn ? \" \" : \"element__trash_invisible\"\n  }`;\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = like.some((i) => i._id === currentUser._id);\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `element__like ${\n    isLiked ? \"element__like_type_active\" : \" \"\n  }`;\n\n  function handleImgClick() {\n    onCardClick({ src, nameImg });\n  }\n\n  function handleLikeClick() {\n    // console.log(\"========LIKE=======\");\n    // console.log(like);\n    onCardLike(like, cardId);\n  }\n\n  function handleDeleteClick() {\n    setConfirmOpen(true);\n    onCardDelete({\n      ownerId: ownerId,\n      cardId: cardId,\n    });\n  }\n\n  return (\n    <div className=\"element\">\n      <img\n        src={src}\n        alt={nameImg}\n        className=\"element__img\"\n        onClick={handleImgClick}\n      />\n      <div className=\"element__name\">\n        <h3 className=\"element__title\">{nameImg}</h3>\n        <div className=\"element__likes\">\n          <button\n            className={cardLikeButtonClassName}\n            type=\"button\"\n            onClick={handleLikeClick}\n          ></button>\n          <p className=\"element__like-counter\">{like.length}</p>\n        </div>\n      </div>\n      <button\n        className={cardDeleteButtonClassName}\n        type=\"button\"\n        onClick={handleDeleteClick}\n      ></button>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport Spinner from \"./Spinner\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Main({\n  cards,\n  onCardLike,\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar,\n  onCardClick,\n  setConfirmOpen,\n  setConfirmAction,\n  setConfirmObj,\n  isLoading,\n  onCardDelete,\n}) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"main page__main\">\n      <section className=\"profile main__profile\">\n        <a href=\"/#\" className=\"profile__avatar-edit\" onClick={onEditAvatar}>\n          <img\n            src={currentUser.avatar}\n            alt=\"Аватар\"\n            className=\"profile__avatar\"\n          />\n        </a>\n        <div className=\"profile__info\">\n          <div className=\"profile__name\">\n            <p className=\"profile__name-title\">{currentUser.name}</p>\n            <button\n              className=\"profile__button profile__button_type_edit\"\n              type=\"button\"\n              onClick={onEditProfile}\n            ></button>\n          </div>\n          <p className=\"profile__about\">{currentUser.about}</p>\n        </div>\n        <button\n          className=\"profile__button profile__button_type_add \"\n          type=\"button\"\n          onClick={onAddPlace}\n        ></button>\n      </section>\n      <section className=\"elements main__elements\">\n        {isLoading ? (\n          <Spinner />\n        ) : (\n          cards.map(({ cardId, src, nameImg, like, ownerId }) => {\n            return (\n              <Card\n                key={cardId}\n                ownerId={ownerId}\n                src={src}\n                nameImg={nameImg}\n                like={like}\n                cardId={cardId}\n                onCardClick={onCardClick}\n                onCardLike={onCardLike}\n                onCardDelete={onCardDelete}\n                setConfirmOpen={setConfirmOpen}\n              />\n            );\n          })\n        )}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React, { useCallback } from \"react\";\nimport Spinner from \"./Spinner\";\n\nfunction PopupWithForm({\n  formId,\n  isOpen,\n  title,\n  children,\n  onClose,\n  button,\n  onSubmit,\n  isLoadingPopup,\n}) {\n  // console.log();\n  const closeByOverlay = useCallback(\n    (evt) => {\n      if (evt.target !== evt.currentTarget) return;\n      onClose();\n    },\n    [onClose]\n  );\n\n  const handleEscClose = useCallback(\n    (evt) => {\n      if (evt.key === \"Escape\") {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  React.useEffect(() => {\n    if (isOpen) {\n      const Popup = document.querySelector(`.${formId}`);\n      document.body.addEventListener(\"keyup\", handleEscClose);\n      Popup.addEventListener(\"click\", closeByOverlay);\n    }\n    return () => {\n      const Popup = document.querySelector(`.${formId}`);\n      document.body.removeEventListener(\"keyup\", handleEscClose);\n      Popup.removeEventListener(\"click\", closeByOverlay);\n    };\n  }, [isOpen, formId, closeByOverlay, handleEscClose]);\n\n  return (\n    <div className={`popup ${formId} ${isOpen && \"popup_opened\"}`}>\n      <form\n        className={`form popup__container`}\n        name={formId}\n        onSubmit={onSubmit}\n        noValidate\n      >\n        <h2 className=\"popup__title\">{title}</h2>\n        {children}\n        <button className=\"popup__save\" type=\"submit\">\n          {button}\n        </button>\n        <button\n          className=\"popup__close\"\n          type=\"button\"\n          onClick={function (evt) {\n            evt.preventDefault();\n            onClose();\n          }}\n        ></button>\n        {isLoadingPopup ? <Spinner /> : \"\"}\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoadingPopup }) {\n  const [inputAboutValue, setInputAboutValue] = React.useState(\"\");\n  const [inputNameValue, setInputNameValue] = React.useState(\"\");\n  // Подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function handleNameChange(evt) {\n    setInputNameValue(evt.target.value);\n  }\n\n  function handleAboutChange(evt) {\n    setInputAboutValue(evt.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateUser(inputNameValue, inputAboutValue);\n  }\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setInputAboutValue(currentUser.about);\n    setInputNameValue(currentUser.name);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm\n      button=\"Сохранить\"\n      title=\"Редактировать профиль\"\n      formId=\"edit-user\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={(e) => handleSubmit(e)}\n      isLoadingPopup={isLoadingPopup}\n    >\n      <input\n        id=\"name-input\"\n        type=\"text\"\n        className=\"popup__input popup__input_type_name\"\n        autoComplete=\"off\"\n        placeholder=\"Имя\"\n        name=\"name\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        value={inputNameValue}\n        onChange={(e) => handleNameChange(e)}\n        required\n      />\n      <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n      <input\n        id=\"about-input\"\n        type=\"text\"\n        className=\"popup__input popup__input_type_about\"\n        autoComplete=\"off\"\n        placeholder=\"О себе\"\n        name=\"about\"\n        value={inputAboutValue}\n        minLength=\"2\"\n        maxLength=\"200\"\n        required\n        onChange={handleAboutChange}\n      />\n      <span id=\"about-input-error\" className=\"popup__input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateAvatar, isLoadingPopup }) {\n  const avatarRef = React.useRef();\n  // console.log();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      button=\"Сохранить\"\n      title=\"Обновить аватар\"\n      formId=\"edit-user-avatar\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={(e) => handleSubmit(e)}\n      isLoadingPopup={isLoadingPopup}\n    >\n      <input\n        id=\"avatar-input\"\n        type=\"url\"\n        className=\"popup__input popup__input_type_name\"\n        autoComplete=\"off\"\n        placeholder=\"Ссылка на аватар\"\n        name=\"name\"\n        ref={avatarRef}\n        minLength=\"2\"\n        maxLength=\"200\"\n        required\n      />\n      <span id=\"avatar-input-error\" className=\"popup__input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isLoadingPopup }) {\n  const [inputCardName, setInputCardName] = React.useState(\"\");\n  const [inputCardLink, setInputCardLink] = React.useState(\"\");\n\n  function handleCardName(evt) {\n    setInputCardName(evt.target.value);\n  }\n\n  function handleCardLink(evt) {\n    setInputCardLink(evt.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace({ name: inputCardName, link: inputCardLink });\n  }\n\n  return (\n    <PopupWithForm\n      button=\"Создать\"\n      title=\"Новое место\"\n      formId=\"add-card\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={(e) => handleSubmit(e)}\n      isLoadingPopup={isLoadingPopup}\n    >\n      <input\n        id=\"name-input\"\n        type=\"text\"\n        className=\"popup__input popup__input_type_name\"\n        autoComplete=\"off\"\n        placeholder=\"Название\"\n        name=\"name\"\n        value={inputCardName}\n        onChange={(e) => handleCardName(e)}\n        minLength=\"2\"\n        maxLength=\"30\"\n        required\n      />\n      <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n      <input\n        id=\"url-input\"\n        type=\"url\"\n        className=\"popup__input popup__input_type_about\"\n        autoComplete=\"off\"\n        placeholder=\"Ссылка на картинку\"\n        value={inputCardLink}\n        onChange={(e) => handleCardLink(e)}\n        name=\"link\"\n        required\n      />\n      <span id=\"url-input-error\" className=\"popup__input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import React from \"react\";\nimport ImagePopup from \"./ImagePopup\";\nimport Confirm from \"./Confirm\";\nimport api from \"../utils/api\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(\n    false\n  );\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setAddPlacerPopupState] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupState] = React.useState(false);\n  const [isConfirmOpen, setConfirmOpen] = React.useState(false);\n\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    src: \"\",\n    nameImg: \"\",\n  });\n  const [isLoadingConfirm, setIsLoadingConfirm] = React.useState(false);\n  const [isLoadingPopup, setIsLoadingPopup] = React.useState(false);\n\n  const [currentUser, setСurrentUser] = React.useState({ name: \"\", about: \"\" });\n  const [currentCard, setСurrentCard] = React.useState({\n    ownerId: \"\",\n    cardId: \"\",\n  });\n\n  const [confirmAction, setConfirmAction] = React.useState({});\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((res) => {\n        setСurrentUser(res);\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }, []);\n\n  function closeAllPopups() {\n    setEditProfilePopupState(false);\n    setEditAvatarPopupState(false);\n    setAddPlacerPopupState(false);\n    setImagePopupState(false);\n    setSelectedCard([]);\n    setIsLoadingPopup(false);\n    setСurrentCard({\n      ownerId: \"\",\n      cardId: \"\",\n    });\n  }\n\n  function handleCardClick({ src, nameImg }) {\n    setSelectedCard({ src, nameImg });\n    setImagePopupState(true);\n  }\n\n  function handleConfirmClick() {\n    setConfirmOpen(true);\n  }\n\n  function handleEditProfileClick(evt) {\n    evt.preventDefault();\n    setEditProfilePopupState(true);\n  }\n\n  function handleEditAvatarClick(e) {\n    e.preventDefault();\n    setEditAvatarPopupState(true);\n  }\n\n  function handleAddPlaceClick(evt) {\n    evt.preventDefault();\n    setAddPlacerPopupState(true);\n  }\n\n  function cardDelete() {\n    const isOwn = currentCard.ownerId === currentUser._id;\n    if (isOwn) {\n      api\n        .deleteCard(currentCard.cardId)\n        .then(() => {\n          const newCards = cards.filter((c) => c.cardId !== currentCard.cardId);\n          setCards(newCards);\n        })\n        .then(() => {\n          setConfirmOpen(false);\n          setIsLoadingConfirm(false);\n        })\n        .catch((err) => {\n          console.log(err); // выведем ошибку в консоль\n        });\n    }\n  }\n\n  function handleCardDelete(obj) {\n    setConfirmAction(\"cardDelete\");\n    setСurrentCard({\n      ownerId: obj.ownerId,\n      cardId: obj.cardId,\n    });\n  }\n\n  function handleCardLike(like, cardId) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = like.some((i) => i._id === currentUser._id);\n    // console.log('main -> handleCardLike');\n    if (!isLiked) {\n      // console.log(\"main -> handleCardLike -> like\")\n      api\n        .likeCard(cardId)\n        .then((newCard) => {\n          const newCards = cards.map((c) =>\n            c.cardId === newCard._id\n              ? {\n                  src: newCard.link,\n                  nameImg: newCard.name,\n                  like: newCard.likes,\n                  cardId: newCard._id,\n                  ownerId: newCard.owner._id,\n                }\n              : c\n          );\n          setCards(newCards);\n        })\n        .catch((err) => {\n          console.log(err); // выведем ошибку в консоль\n        });\n    } else {\n      // console.log(\"main -> handleCardLike -> deleteLike\")\n      api\n        .deleteLikeCard(cardId)\n        .then((newCard) => {\n          const newCards = cards.map((c) =>\n            c.cardId === newCard._id\n              ? {\n                  src: newCard.link,\n                  nameImg: newCard.name,\n                  like: newCard.likes,\n                  cardId: newCard._id,\n                  ownerId: newCard.owner._id,\n                }\n              : c\n          );\n          setCards(newCards);\n        })\n        .catch((err) => {\n          console.log(err); // выведем ошибку в консоль\n        });\n    }\n  }\n\n  function handleUpdateUser(name, about) {\n    setIsLoadingPopup(true);\n    api\n      .editUserInfo(name, about)\n      .then((res) => setСurrentUser(res))\n      .then(() => {\n        setIsLoadingPopup(false);\n        setEditProfilePopupState(false);\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n\n  function handleUpdateAvatar(obj) {\n    setIsLoadingPopup(true);\n    api\n      .setUserAvatar(obj.avatar)\n      .then((res) => setСurrentUser(res))\n      .then(() => {\n        setIsLoadingPopup(false);\n        setEditAvatarPopupState(false);\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n\n  function handleAddPlaceSubmit(obj) {\n    setIsLoadingPopup(true);\n    api\n      .addNewCard(obj.name, obj.link)\n      .then((newCard) => {\n        newCard.key = newCard._id;\n        newCard.like = newCard.likes;\n        newCard.ownerId = newCard.owner._id;\n        newCard.src = newCard.link;\n        newCard.nameImg = newCard.name;\n        newCard.cardId = newCard._id;\n        setCards([newCard, ...cards]);\n      })\n      .then(() => {\n        setIsLoadingPopup(false);\n        setAddPlacerPopupState(false);\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    api\n      .getInitialCards()\n      .then((res) => {\n        setCards(\n          res.map((item) => ({\n            src: item.link,\n            nameImg: item.name,\n            like: item.likes,\n            cardId: item._id,\n            ownerId: item.owner._id,\n          }))\n        );\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <Header />\n        <Main\n          cards={cards}\n          onEditProfile={(e) => handleEditProfileClick(e)}\n          onEditAvatar={(e) => handleEditAvatarClick(e)}\n          onAddPlace={(e) => handleAddPlaceClick(e)}\n          onCardClick={handleCardClick}\n          setConfirmOpen={handleConfirmClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          isLoading={isLoading}\n        />\n        <Footer />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoadingPopup={isLoadingPopup}\n        ></EditProfilePopup>\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoadingPopup={isLoadingPopup}\n        ></EditAvatarPopup>\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoadingPopup={isLoadingPopup}\n        ></AddPlacePopup>\n\n        <Confirm\n          isOpen={isConfirmOpen}\n          setIsOpen={setConfirmOpen}\n          confirmAction={confirmAction}\n          setСurrentUser={setСurrentUser}\n          isLoadingConfirm={isLoadingConfirm}\n          setIsLoadingConfirm={setIsLoadingConfirm}\n          cardDelete={cardDelete}\n        />\n        <ImagePopup\n          card={selectedCard}\n          isOpen={isImagePopupOpen}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}